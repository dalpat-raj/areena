{"version":3,"file":"static/js/7444.1b58d86e.chunk.js","mappings":"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","sources":["components/checkout/payment/Payment.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   CardNumberElement,\r\n//   CardCvcElement,\r\n//   CardExpiryElement,\r\n//   useStripe,\r\n//   useElements,\r\n// } from \"@stripe/react-stripe-js\";\r\nimport \"./payment.scss\";\r\nimport { backend__url } from \"../../../Server\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport axios from \"axios\";\r\n// import { toast } from \"react-toastify\";\r\n\r\nconst Payment = () => {\r\n  const { user } = useSelector((state) => state.user);\r\n\r\n  const [orderData, setOrderData] = useState([]);\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const navigate = useNavigate();\r\n  // const stripe = useStripe();\r\n  // const elements = useElements();\r\n\r\n  useEffect(() => {\r\n    const orderData = JSON.parse(localStorage.getItem(\"latestOrder\"));\r\n    setOrderData(orderData);\r\n  }, []);\r\n\r\n  const order = {\r\n    cart: orderData?.data,\r\n    shippingAddress: orderData?.shippingAddress,\r\n    user: user && user,\r\n    shippingPrice: orderData?.shippingPrice,\r\n    discountPrice: orderData?.discountPrice,\r\n    subTotalPrice: orderData?.subTotalPrice,\r\n    totalPrice: orderData?.totalPrice,\r\n  };\r\n\r\n  // const paymentData = {\r\n  //   amount: Math.round(orderData?.totalPrice * 100),\r\n  // };\r\n\r\n  // const paymentHandler = async (e) => {\r\n  //   e.preventDefault();\r\n  //   try {\r\n  //     const config = {\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       },\r\n  //     };\r\n\r\n  //     const { data } = await axios.post(\r\n  //       `/api/v2/payment/process`,\r\n  //       paymentData,\r\n  //       config\r\n  //     );\r\n\r\n  //     const client_secret = data.client_secret;\r\n\r\n  //     if (!stripe || !elements) return;\r\n  //     const result = await stripe.confirmCardPayment(client_secret, {\r\n  //       payment_method: {\r\n  //         card: elements.getElement(CardNumberElement),\r\n  //       },\r\n  //     });\r\n\r\n  //     if (result.error) {\r\n  //       toast.error(result.error.message);\r\n  //     } else {\r\n  //       if (result.paymentIntent.status === \"succeeded\") {\r\n  //         order.paymentInfo = {\r\n  //           id: result.paymentIntent.id,\r\n  //           status: result.paymentIntent.status,\r\n  //           type: \"Credit Card\",\r\n  //         };\r\n\r\n  //         await axios\r\n  //           .post(`/api/v2/create-order`, order, config)\r\n  //           .then((res) => {\r\n  //             localStorage.setItem(\"cartItems\", JSON.stringify([]));\r\n  //             localStorage.setItem(\"latestOrder\", JSON.stringify([]));\r\n  //             navigate(\"/order/success\");\r\n  //           });\r\n  //       }\r\n  //     }\r\n  //   } catch (error) {\r\n  //     toast.error(error);\r\n  //   }\r\n  // };\r\n\r\n  const cashOnDelivery = async () => {\r\n\r\n    order.paymentInfo = {\r\n      type: \"Cash On Delivery\",\r\n    };\r\n\r\n    await axios\r\n      .post(`/api/v2/create-order`, order, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        localStorage.setItem(\"cartItems\", JSON.stringify([]));\r\n        localStorage.setItem(\"latestOrder\", JSON.stringify([]));\r\n        navigate(\"/order/success\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment__main\">\r\n      <div className=\"row\">\r\n        <div className=\"box payment__col\">\r\n          <div className=\"input__col\">\r\n            {/* <div className=\"select__box\" onClick={() => setSelected(1)}>\r\n              <div className=\"round__box\">\r\n                <span className={selected === 1 && \"active\"}></span>\r\n              </div>\r\n              <p>Pay with Debit/credit card</p>\r\n            </div> */}\r\n            {/* <div className=\"input__details\">\r\n              <form onSubmit={paymentHandler}>\r\n                <div className=\"box\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={user?.name}\r\n                    placeholder=\"Name On Card (Optional)\"\r\n                  />\r\n                  <CardExpiryElement\r\n                    className=\"input\"\r\n                    options={{\r\n                      style: {\r\n                        base: {\r\n                          fontSize: \"13px\",\r\n                          lineHeight: 1.5,\r\n                        },\r\n                        empty: {\r\n                          color: \"#3a120a\",\r\n                          backgroundColor: \"transparent\",\r\n                          \"::placeholder\": {\r\n                            color: \"#333\",\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"box\">\r\n                  <CardNumberElement\r\n                    className=\"input\"\r\n                    options={{\r\n                      style: {\r\n                        base: {\r\n                          fontSize: \"13px\",\r\n                          lineHeight: 1.5,\r\n                        },\r\n                        empty: {\r\n                          color: \"#333\",\r\n                          backgroundColor: \"transparent\",\r\n                          \"::placeholder\": {\r\n                            color: \"#333\",\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n\r\n                  <CardCvcElement\r\n                    className=\"input\"\r\n                    options={{\r\n                      style: {\r\n                        base: {\r\n                          fontSize: \"13px\",\r\n                          lineHeight: 1.5,\r\n                        },\r\n                        empty: {\r\n                          color: \"#333\",\r\n                          backgroundColor: \"transparent\",\r\n                          \"::placeholder\": {\r\n                            color: \"#333\",\r\n                          },\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"btn__box\">\r\n                  <button type=\"submit\" className=\"btn-main\">\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div> */}\r\n\r\n            <div className=\"select__box\" onClick={() => setSelected(2)}>\r\n              <div className=\"round__box\" onClick={cashOnDelivery}>\r\n                <span className={selected === 2 && \"active\"}></span>\r\n              </div>\r\n              <p>Cash On Delivery</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"box coupon__col\">\r\n          <div className=\"cart__products\">\r\n            {orderData?.cart &&\r\n              orderData?.cart.map((item, i) => (\r\n                <div className=\"product__row\" key={i}>\r\n                  <div className=\"col img__row\">\r\n                    <div className=\"img\">\r\n                      <img\r\n                        src={`${backend__url}/${item?.images[0]}`}\r\n                        alt=\"df\"\r\n                      />\r\n                      <span className=\"product__qty\">{item?.qty}</span>\r\n                    </div>\r\n                    <div className=\"product__name\">\r\n                      <p>{item?.name}</p>\r\n                      <span>\r\n                        {item?.size} {`/ ${item?.color}`}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col col_price\">\r\n                    <p>₹ {item?.sellingPrice * item?.qty}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n\r\n            <form>\r\n              <div className=\"discount__code\">\r\n                <input type=\"text\" placeholder=\"Coupon Code\" />\r\n                <button type=\"submit\" className=\"btn-main\">\r\n                  Apply\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            <div className=\"price\">\r\n              <div className=\"subtotal row\">\r\n                <p>Subtotal</p>\r\n                <p>₹ {orderData?.subTotalPrice}</p>\r\n              </div>\r\n              <div className=\"shipping row\">\r\n                <p>Shipping </p>\r\n                <p className=\"shipping__price\">\r\n                  ₹ {orderData?.shippingPrice?.toLocaleString()}\r\n                </p>\r\n              </div>\r\n              <div className=\"estimate__tax row\">\r\n                <p>Estimate taxes </p>\r\n                <p>₹ 0.0</p>\r\n              </div>\r\n              <div className=\"discount row\">\r\n                <p>Discount</p>\r\n                <p>\r\n                  ₹{\" \"}\r\n                  {orderData?.discountPrice\r\n                    ? orderData?.discountPrice?.toLocaleString()\r\n                    : \"0.0\"}\r\n                </p>\r\n              </div>\r\n              <div className=\"total row\">\r\n                <p className=\"total__text\">Total</p>\r\n                <p className=\"total__price\">₹ {orderData?.totalPrice}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"names":["_orderData$shippingPr","_orderData$discountPr","user","useSelector","state","_useState","useState","_useState2","_slicedToArray","orderData","setOrderData","_useState3","_useState4","selected","setSelected","navigate","useNavigate","useEffect","JSON","parse","localStorage","getItem","order","cart","data","shippingAddress","shippingPrice","discountPrice","subTotalPrice","totalPrice","cashOnDelivery","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","paymentInfo","type","axios","post","headers","then","res","setItem","stringify","stop","apply","arguments","_jsx","className","children","_jsxs","onClick","map","item","i","src","concat","backend__url","images","alt","qty","name","size","color","sellingPrice","placeholder","toLocaleString"],"sourceRoot":""}